{"version":3,"sources":["components/AddCategories.js","helpers/getGifs.js","components/GifGridItem.js","components/gifGrid.js","hooks/useFetchGifs.js","exampleApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","share","embed_url","images","preview_gif","GifGridItem","className","src","alt","href","rel","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","Example","categories","ReactDOM","render","document","getElementById"],"mappings":"sNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAIlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAgBfG,YAAa,qC,+BCtBhBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,MAAOH,EAAII,UACXZ,IAAG,UAAEQ,EAAIK,cAAN,aAAE,EAAYC,YAAYd,QATlB,kBAYZM,GAZY,4CAAH,sDCEPS,G,MAAc,SAAC,GAAyB,EAAxBN,GAAyB,IAAtBC,EAAqB,EAArBA,MAAMV,EAAe,EAAfA,IAAIW,EAAW,EAAXA,MAEtC,OACI,sBAAKK,UAAU,yCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKC,IAAMjB,EAAMkB,IAAOR,MAE5B,+BACMA,EACF,mBAAGS,KAAMR,EAAOK,UAAU,QAAQrB,OAAO,SAASyB,IAAI,aAAtD,gCCRHC,EAAU,SAAC,GAAgB,IAAfvB,EAAc,EAAdA,SAEvB,ECH0B,SAAEA,GAC1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNiB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WAEP5B,EAAQC,GACH4B,MAAM,SAAAC,GACHH,EAAS,CACLnB,KAAKsB,EACLL,SAAS,SAGvB,CAACxB,IAGIyB,EDfqBK,CAAa9B,GAA/Be,EAAZ,EAAOR,KAAYiB,EAAnB,EAAmBA,QAGjB,OACI,qCACI,oBAAIN,UAAU,WAAd,SAA0BlB,IACzBwB,GAAW,mBAAGN,UAAU,gDAAb,wBACZ,qBAAKA,UAAU,uDAAf,SAEQH,EAAON,KAAK,SAAAC,GAAG,OAEX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEbxBoB,EAAU,WACnB,MAAoC9C,mBAAS,CAAC,eAA9C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAEA,OACI,iCACA,oBAAIkC,UAAU,YAAd,yBAEA,cAAC,EAAD,CAAalC,cAAeA,IAGpBgD,EAAWvB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CACAA,SAAYA,GACLA,U,MCZ3BiC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.15528476.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length >2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit }>        \r\n            <input \r\n                type='text'\r\n                value= {inputValue}\r\n                onChange= {handleInputChange}\r\n                placeholder= 'Type anything and press ENTER'\r\n             />\r\n        </form>\r\n    );\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=csqisEtXRcLk0xjgr50ujcNP74NJYDRz`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();    \r\n    const gifs = data.map(img => {        \r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            share: img.embed_url,\r\n            url: img.images?.preview_gif.url\r\n        }\r\n    })\r\n    return gifs;        \r\n}","import React from \"react\";\r\nimport '../components/GifGridItem.css';\r\n\r\nexport const GifGridItem = ({id,title,url,share}) => {\r\n    \r\n    return(\r\n        <div className='item animate__animated animate__fadeIn' >\r\n            <div className='image'>\r\n                <img src={ url } alt= { title } />\r\n            </div> \r\n            <h4>\r\n                { title }\r\n                <a href={share} className='share' target='_blank' rel='noreferrer'>Share This</a>\r\n                </h4> \r\n                  \r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n \r\n  const {data:images,loading} = useFetchGifs(category);\r\n\r\n\r\n    return(\r\n        <>\r\n            <h3 className='catTitle'>{category}</h3>\r\n            {loading && <p className='item animate__animated item animate__animated'>Loading...</p>} \r\n            <div className='groupCategory item animate__animated animate__fadeIn'>                                 \r\n                {\r\n                    images.map( img => \r\n                        (\r\n                        <GifGridItem \r\n                            key={img.id}                           \r\n                            {...img} \r\n                        />\r\n                        )\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}","import { useEffect, useState } from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    },[category])\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport  {AddCategory} from './components/AddCategories';\r\nimport { GifGrid } from './components/gifGrid';\r\n\r\n\r\nexport const Example = () => {\r\n    const [categories, setCategories] = useState(['Bomfunk MC']);\r\n    \r\n    return(\r\n        <main>\r\n        <h2 className='mainTitle'>GIFS SEARCH</h2>\r\n        \r\n        <AddCategory setCategories={setCategories}/>\r\n        \r\n            {\r\n                categories.map( category => (\r\n                    <GifGrid \r\n                    category = {category}\r\n                    key = {category}\r\n                    />\r\n                ))\r\n            }\r\n        \r\n        </main>\r\n    );\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Example} from \"./exampleApp\";\nimport './index.css';\n\n\nReactDOM.render(\n  <Example />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}